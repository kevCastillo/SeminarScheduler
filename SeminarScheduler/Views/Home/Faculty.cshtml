
@model SeminarScheduler.Views.Home.FacultyModel
@{
	ViewData["Title"] = "Faculty";
}


    <div class="row">
        <div class="col-md-12">
            <div class="card shadow mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="m-0">Faculty List</h5>
                </div>
                <div class="card-body">
                    <h2>Adding Faculty Data</h2>
                    <style>
                        h1,
                        h2 {
                            text-align: center;
                        }

                        #formContainer {
                            text-align: center;
                            margin-bottom: 20px;
                        }

                        label {
                            display: block;
                            margin-top: 10px;
                        }

                        input,
                        textarea {
                            width: 300px;
                            padding: 8px;
                            margin-top: 5px;
                            border: 1px solid #ccc;
                            border-radius: 4px;
                        }

                        button {
                            margin: 10px;
                            padding: 8px 16px;
                            background-color: #448cfc;
                            color: #fff;
                            border: none;
                            border-radius: 4px;
                            cursor: pointer;
                        }

                            button:hover {
                                background-color: #cbe1fc;
                            }

                        table {
                            border-collapse: collapse;
                            margin-bottom: 20px;
                            width: 100%;
                        }

                        th,
                        td {
                            border: 1px solid #ddd;
                            padding: 8px;
                            text-align: center;
                        }

                        th {
                            background-color: #0c6cfc;
                            color: #fff;
                        }
                    </style>
                    <div>
                        <label for="idInput">ID:</label>
                        <input type="text" id="idInput" placeholder="Enter ID...">

                        <label for="nameInput">Name:</label>
                        <input type="text" id="nameInput" placeholder="Enter Name...">

                        <label for="departmentInput">Department:</label>
                        <input type="text" id="departmentInput" placeholder="Enter Department...">

                        <label for="emailInput">Email:</label>
                        <input type="email" id="emailInput" placeholder="Enter Email...">

                        <label for="currentWorkloadInput">Current Workload:</label>
                        <input type="number" id="currentWorkloadInput" placeholder="Enter Current Workload..." min="0">

                        <label for="maxWorkloadInput">Max Workload:</label>
                        <input type="number" id="maxWorkloadInput" placeholder="Enter Max Workload...">

                        <label for="statusInput">Status:</label>
                        <input type="text" id="statusInput" placeholder="Enter Status...">

                        <br>
                        <button onclick="addData()">Add</button>
                    </div>


                    <table id="outputTable">
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Department</th>
                            <th>Email</th>
                            <th>Current Workload</th>
                            <th>Max Workload</th>
                            <th>Status</th>
                        </tr>
                    </table>
                    <script>
                        function addData() {
                        
                            let id = document.getElementById("idInput").value;
                            let name = document.getElementById("nameInput").value;
                            let department = document.getElementById("departmentInput").value;
                            let email = document.getElementById("emailInput").value;
                            let currentWorkload = document.getElementById("currentWorkloadInput").value;
                            let maxWorkload = document.getElementById("maxWorkloadInput").value;
                            let status = document.getElementById("statusInput").value;

                          
                            let table = document.getElementById("outputTable");
                            let newRow = table.insertRow(table.rows.length);

                            
                            newRow.insertCell(0).innerHTML = id;
                            newRow.insertCell(1).innerHTML = name;
                            newRow.insertCell(2).innerHTML = department;
                            newRow.insertCell(3).innerHTML = email;
                            newRow.insertCell(4).innerHTML = currentWorkload;
                            newRow.insertCell(5).innerHTML = maxWorkload;
                            newRow.insertCell(6).innerHTML = status;

                            
                            let actionCell = newRow.insertCell(7);
                            actionCell.innerHTML =
                                '<button onclick="editData(this)">Edit</button> ' +
                                '<button onclick="deleteData(this)">Delete</button>';

                           
                            clearInputs();
                        }

                        function editData(button) {
                           
                            let row = button.parentNode.parentNode;             
                            row.cells[0].innerHTML = prompt("Update ID:", row.cells[0].innerHTML);
                            row.cells[1].innerHTML = prompt("Update Name:", row.cells[1].innerHTML);
                            row.cells[2].innerHTML = prompt("Update Department:", row.cells[2].innerHTML);
                            row.cells[3].innerHTML = prompt("Update Email:", row.cells[3].innerHTML);
                            row.cells[4].innerHTML = prompt("Update Current Workload:", row.cells[4].innerHTML);
                            row.cells[5].innerHTML = prompt("Update Max Workload:", row.cells[5].innerHTML);
                            row.cells[6].innerHTML = prompt("Update Status:", row.cells[6].innerHTML);
                        }

                        function deleteData(button) {                           
                            let row = button.parentNode.parentNode;
                            row.remove();
                        }

                        function clearInputs() {
                            document.getElementById("idInput").value = "";
                            document.getElementById("nameInput").value = "";
                            document.getElementById("departmentInput").value = "";
                            document.getElementById("emailInput").value = "";
                            document.getElementById("currentWorkloadInput").value = "";
                            document.getElementById("maxWorkloadInput").value = "";
                            document.getElementById("statusInput").value = "";
                        }
                    </script>
                               
                        
                </div>
            </div>
        </div>
    </div>

 
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Initialize DataTable for better sorting and searching
        $(document).ready(function() {
            $('#facultyTable').DataTable();

            // Department workload chart
            var deptCtx = document.getElementById('departmentChart').getContext('2d');
            var departmentChart = new Chart(deptCtx, {
                type: 'bar',
                data: {
                    labels: ['Computer Science', 'Mathematics', 'English', 'History', 'Physics'],
                    datasets: [{
                        label: 'Assigned Courses',
                        data: [12, 8, 6, 5, 7],
                        backgroundColor: [
                            'rgba(78, 115, 223, 0.8)',
                            'rgba(28, 200, 138, 0.8)',
                            'rgba(246, 194, 62, 0.8)',
                            'rgba(54, 185, 204, 0.8)',
                            'rgba(231, 74, 59, 0.8)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Faculty availability chart
            var availCtx = document.getElementById('availabilityChart').getContext('2d');
            var availabilityChart = new Chart(availCtx, {
                type: 'pie',
                data: {
                    labels: ['Available', 'Full Workload', 'On Leave'],
                    datasets: [{
                        label: 'Faculty Status',
                        data: [12, 4, 2],
                        backgroundColor: [
                            'rgba(28, 200, 138, 0.8)',
                            'rgba(231, 74, 59, 0.8)',
                            'rgba(246, 194, 62, 0.8)'
                        ],
                        borderWidth: 1
                    }]
                }
            });
        });
    </script>
}
